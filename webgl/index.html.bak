<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="screen-orientation" content="landscape">
    <title>WebGL</title>
    <style>
    body{ text-align:center} 
      #root {
        width: 100%;
        height: 600px;
        background-color: #EEEEEE;
      }
      button {
      	margin: 240px auto;
      	width: 180px;
      	height: 120px;
      	border-radius: 20px;
      	background-color: #38A3D2;
      	box-shadow: 8px 8px 4px #888000;
      	border: none;
      }
    </style>
    <script type="text/javascript" src="js/three.min.js"></script>
    <script type="text/javascript" src="js/TrackballControls.js"></script>
    <script type="text/javascript">
    var stage = {
			renderer: null,
			scene: null,
	      	camera: null,
	      	light: null,
	      	spotLight: null,
	      	pointLight: null,
	      	controls: null,
	      	init: function (){
		      		var width = document.getElementById("root").clientWidth;
					var height = document.getElementById("root").clientHeight;
					this.scene = new THREE.Scene();
					this.renderer = new THREE.WebGLRenderer({alpha: true});
					this.renderer.setSize(width, height);
					this.renderer.setClearColor(0x000000, 1.0);
					this.renderer.shadowMap.enabled = true;
					this.renderer.shadowMap.soft = true;
					document.getElementById("root").appendChild(this.renderer.domElement);
					this.camera = new THREE.PerspectiveCamera(75, width/height, 0.01, 10000);
					this.camera.position.set(10, 150, 150);
					//this.camera.up = {x: 0, y: 1, z: 0};
					this.camera.lookAt({x : 0, y : 0, z : 0});
					this.camera.lookAt(this.scene.position);
					this.scene.add(this.camera);
					this.light = new THREE.AmbientLight(0x444444);
					this.scene.add(this.light);
					this.controls = new THREE.TrackballControls( this.camera );
					this.controls.rotateSpeed = 5.0;
					this.controls.zoomSpeed = 5;
					this.controls.panSpeed = 2;
					this.controls.noZoom = false;
					this.controls.noPan = false;
					this.controls.staticMoving = true;
					this.controls.dynamicDampingFactor = 0.3;
					this.spotLight = new THREE.SpotLight(0x00ff00, 1.0, 0, 20);
					this.spotLight.position.set(100, 100, 0);
					this.spotLight.castShadow = true;
					this.spotLight.shadow.camera.near = 2;
		      this.spotLight.shadow.camera.far = 200;
		      this.spotLight.shadow.camera.fov = 30;
		      this.spotLight.shadow.mapSize.width = 1024;
		      this.spotLight.shadow.mapSize.height = 1024;
		      this.spotLight.cameraVisible = true;
					this.scene.add(this.spotLight);
					this.setObj();
				},
				update: function(){
					this.controls.update();
				},
		    setObj: function(){
					var mesh = new THREE.Mesh(new THREE.PlaneGeometry(160, 160), new THREE.MeshLambertMaterial({color: 0xFFFFFF, side: THREE.DoubleSide}));
					mesh.rotation.x = -Math.PI/2;
					mesh.receiveShadow = true;
					this.scene.add(mesh);
					mesh = new THREE.Mesh(new THREE.SphereGeometry(10, 20, 20), new THREE.MeshLambertMaterial({color: 0xFFCCCC, side: THREE.DoubleSide}));
					mesh.position.set(20, 20, 20);
					mesh.castShadow = true;
					this.scene.add(mesh);
					var background = new THREE.TextureLoader().load("/img/alpha0.png");
					var texture = new THREE.TextureLoader().load("/img/alpha3.png");
					var lensFlare = new THREE.LensFlare(background, 350, 0.0, THREE.AdditiveBlending, 0xFF0000);
					lensFlare.add(texture, 260, 0.4, THREE.AdditiveBlending);
	/*        
					lensFlare.add(texture, 170, 0.6, THREE.AdditiveBlending);
	        lensFlare.add(texture, 100, 0.8, THREE.AdditiveBlending);
	        lensFlare.add(texture, 30, 1.0, THREE.AdditiveBlending);
	*/
	        lensFlare.position.copy(this.spotLight.position);
	        this.scene.add(lensFlare);
				}
		}
		function animation(){
			
		}
		function render(){
			stage.update();				
    	stage.renderer.render(stage.scene, stage.camera);
			requestAnimationFrame(render);
		}

		function start() {
			var root = document.getElementById("root");
			root.removeChild(root.childNodes[1]);
			stage.init();
			render();
		}
    </script>
  </head>
  <body onload="start();">
    <div id="root">
    	<button onclick="start();">点击继续</button>
    </div>
  </body>
</html>
